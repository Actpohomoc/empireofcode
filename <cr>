" NeoBundle Scripts {{{
if has('vim_starting')
  if &compatible
    set nocompatible
  endif

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" Add or remove your Bundles here:
NeoBundle 'Shougo/neosnippet.vim'
NeoBundle 'Shougo/neosnippet-snippets'

NeoBundle 'tpope/vim-fugitive'
NeoBundle 'klen/python-mode'
NeoBundle 'bling/vim-airline'
NeoBundle 'flazz/vim-colorschemes'
NeoBundle 'fatih/vim-go'
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'junegunn/goyo.vim'
NeoBundle 'mileszs/ack.vim'
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'davidhalter/jedi-vim'

" Required:
call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles, this will prompt you to install them.
NeoBundleCheck
" }}}
" General {{{
" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" colorscheme
colorscheme wombat256

set number "display line numbers
set clipboard=unnamed " use the system clipboard
syntax enable " enable syntax highlighting

" tabs to spaces with indent always 4
set tabstop=4 softtabstop=4 expandtab shiftwidth=4 smarttab

" show the matching part of the pair for [] {} and ()
set showmatch
" }}}

" Mappings {{{
" switch between paste mode
set pastetoggle=<F2>

" configure leader key
let mapleader = ","
let g:mapleader = ","

" leader shortcuts
nmap <leader>w :w!<cr>       " Fast saving
nnoremap <leader>w :w!<cr>   " Fast saving
nmap <leader>q :qa!<cr>  " Fast quit
nmap <leader>z za        " Fold/Unfold section
nnoremap <space> za      " Fold/Unfold space

" Shortcuts to jump between split panes
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Visual mode pressing * or # searches for the current selection
" Super useful! From an idea by Michael Naumann
vnoremap <silent> * :call VisualSelection('f')<CR>
vnoremap <silent> # :call VisualSelection('b')<CR>

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>
map <silent> <leader><space> :noh<cr>
" }}}

" Airline status {{{
let g:airline_theme ='wombat'
let g:airline_powerline_fonts = 0
set laststatus=2
set ttimeoutlen=20
" }}}
" Ack(ag) search {{{
let g:ackprg = 'ag --nogroup --nocolor --column'
map <leader>g :Ack 
let g:ack_mappings = {
    \ "o": "<CR><C-W>p<C-W>c",
    \ "O": "<CR><C-W>p" }
" }}}
" CtrlP {{{
let g:ctrlp_map = '<leader>f'
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
let g:ctrlp_custom_ignore = '\vbuild/|dist/|venv/|target/|\.(o|swp|pyc|egg)$'
" }}}
" User Interface {{{
" Turn backup off, since most stuff is in SVN, git et.c anyway...
set nobackup
set nowb
set noswapfile

" Turn on the WiLd menu
set wildmenu

" Ignore compiled files
set wildignore=*.o,*~,*.pyc

"Always show current position
set ruler

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" searching tweaks
set ignorecase
set smartcase
set hlsearch
set incsearch

" Don't redraw while executing macros (good performance config)
set lazyredraw

" For regular expressions turn magic on
set magic
" }}}

" GitGutter {{{
map <F3> :GitGutterSignsToggle<cr>
let g:gitgutter_max_signs = 500  " default value
" }}}
" Goyo Distraction free mode {{{
map <F4> :Goyo<cr>
" }}}
" Custom commands {{{
" format current buffer as json
com! FormatJSON %!python -m json.tool
" }}}

" PYTHON {{{
" K - show documentation for object under cursor
" <leader>r - run current file code
" <leader>b - set/unset breakpoint
" Ctrl+Space - autocomplete
let g:pymode_python = 'python3'
let g:pymode_folding = 0
let g:pymode_rope = 0
let g:jedi#force_py_version = 3
let g:jedi#goto_command = "<leader>d"
let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#documentation_command = "K"
let g:jedi#usages_command = "M"
let g:jedi#show_call_signatures = "1"
let python_highlight_all=1
autocmd FileType python setlocal completeopt-=preview
" }}}

" vim:foldmethod=marker:foldlevel=0
